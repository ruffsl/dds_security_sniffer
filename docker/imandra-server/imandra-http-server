#!/bin/sh

# (c)Copyright Aesthetic Integration, Ltd., 2018.

set -ue

GREEN='\033[0;32m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

printfln() {
    printf "$1\\n"
}

POSITIONAL=""
HELP=false
SKIP_UPDATE=false
FORCE_KILL=false
NON_INTERACTIVE=false

while [ $# -gt 0 ]; do
    case "$1" in
        --logout)
            rm -rf "$HOME/.imandra"
            printfln "[${GREEN}OK${NC}] You've been logged out"
            exit 0;;
        --skip-update)
            SKIP_UPDATE=true;;
        --non-interactive)
            NON_INTERACTIVE=true;;
        --force-kill)
            FORCE_KILL=true;;
        --help|-help)
            HELP=true
            POSITIONAL="$POSITIONAL $1";;
        *) POSITIONAL="$POSITIONAL $1";;
    esac
    shift
done

if [ ! -z "${POSITIONAL-}" ]; then
    set -- "$(echo \"${POSITIONAL}\" | xargs)"
fi

IMANDRA_CLIENT="/usr/local/var/imandra/_opam/bin/imandra_client_http_server"
IMANDRA_NETWORK_CLIENT="/usr/local/var/imandra/_opam/bin/imandra_network_client"

download () {
    if command -v wget >/dev/null; then
        wget -q "$@" -O -
    elif command -v curl >/dev/null; then
        curl -s -L "$@"
    else
        printfln "[${RED}ERROR${NC}] We couldn't find either curl or wget."
        exit 1
    fi
}

VERSION="dc130cd24f3869210d3f22cfc229a57035c44527"

if ! ping -q -c 1 -W 1 8.8.8.8 > /dev/null 2>&1 ; then
    printfln "[${RED}ERROR${NC}] You might have connectivity problems."
    exit 1
fi

if [ ! -d "$HOME/.imandra-dev" ] && "$NON_INTERACTIVE"; then
    printfln "[${RED}ERROR${NC}] You're not logged into imandra-repl, and --non-interactive was passed. Please login interactively."
    exit 3
fi

if ! $SKIP_UPDATE; then
    if [ ! "$(download "https://storage.googleapis.com/imandra-installer/last-version")" = "$VERSION" ]; then
        if ! $NON_INTERACTIVE; then
            printfln "[${CYAN}INFO${NC}] There's a new version of Imandra available, we'll download it and update for you now.."
            download "https://storage.googleapis.com/imandra-installer/install.sh" | sh -s -- -n
            printfln "[${GREEN}OK${NC}] Imandra updated to the latest version!"
        else
            printfln "[${RED}ERROR${NC}] A newer version of Imandra is available, and --non-interactive was passed."
            exit 4
        fi
    fi
fi

eval "$(opam env --switch=/usr/local/var/imandra --set-switch)"

POD_URL=$(mktemp)

if $FORCE_KILL; then
    $IMANDRA_CLIENT -server "$IMANDRA_NETWORK_CLIENT -save-pod-url $POD_URL" $@ > /dev/null 2>&1 < /dev/null || true
else
    $IMANDRA_CLIENT -server "$IMANDRA_NETWORK_CLIENT -save-pod-url $POD_URL" $@ || true
fi

if [ -f ${POD_URL} ]; then
    URL=
    EXCHANGE_TOKEN=
    CONNECTED=
    read -r URL EXCHANGE_TOKEN CONNECTED < $POD_URL || true

    if [ "$CONNECTED" = "true" ] || $FORCE_KILL; then
        download --header "X-force-quit:${EXCHANGE_TOKEN}" "$URL" 2> /dev/null &
        if $FORCE_KILL; then
            printfln "[${GREEN}OK${NC}] Zombie server killed"
        fi
    fi
    rm "$POD_URL"
fi

if $HELP; then
    printfln "  --logout            Logout"
    printfln "  --skip-update       Skip imandra-repl autoupdate"
    printfln "  --force-kill        Forcefully kill server if left hanging"
    printfln "  --non-interactive   Only start if no interactivity is required (for scripts)"
fi
